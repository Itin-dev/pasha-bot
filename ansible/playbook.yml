---
- hosts: all
  become: yes
  tasks:
    - name: Set environment variables for Python app (this might be unnecessary now)
      shell: |
        export APP_NAME={{ APP_NAME }}
        export DOCKERHUB_USERNAME={{ DOCKERHUB_USERNAME }}
        export TG_TOKEN={{ TG_TOKEN }}
        export GEMINI_API_KEY={{ GEMINI_API_KEY }}
        export USERNAME={{ USERNAME }}
      environment:
        APP_NAME: "{{ APP_NAME }}"
        DOCKERHUB_USERNAME: "{{ DOCKERHUB_USERNAME }}"
        TG_TOKEN: "{{ TG_TOKEN }}"
        GEMINI_API_KEY: "{{ GEMINI_API_KEY }}"
        USERNAME: "{{ USERNAME }}"

    - name: Create directory for the app (if necessary)
      file:
        path: /home/{{ USERNAME }}/dev/apps/{{ APP_NAME }}
        state: directory
        mode: '0755'

    - name: Remove existing container (if exists)
      shell: |
        docker stop {{ APP_NAME }} || true
        docker rm {{ APP_NAME }} || true
      ignore_errors: yes

    - name: Pull the latest Docker image
      shell: docker pull {{ DOCKERHUB_USERNAME }}/{{ APP_NAME }}:latest

    - name: Run the new container with environment variables
      shell: |
        docker run -d --name {{ APP_NAME }} \
        -e TG_TOKEN={{ TG_TOKEN }} \
        -e GEMINI_API_KEY={{ GEMINI_API_KEY }} \
        {{ DOCKERHUB_USERNAME }}/{{ APP_NAME }}:latest
