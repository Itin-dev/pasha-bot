---
- hosts: all
  become: yes
  tasks:
    - name: Create directory for the app (if necessary)
      file:
        path: /home/{{ USERNAME }}/dev/apps/{{ APP_NAME }}
        state: directory
        mode: '0755'

    - name: Create a directory for persistent storage (SQLite DB)
      file:
        path: /home/{{ USERNAME }}/dev/apps/{{ APP_NAME }}/db  # Create the db directory
        state: directory
        mode: '0755'

    - name: Create an env file for the Python app
      copy:
        dest: /home/{{ USERNAME }}/dev/apps/{{ APP_NAME }}/.env
        content: |
          TG_TOKEN={{ TG_TOKEN }}
          GEMINI_API_KEY={{ GEMINI_API_KEY }}
          DB_PATH=/db/bot_messages.db
        mode: '0644'
        owner: "{{ USERNAME }}"
        group: "{{ USERNAME }}"

    - name: Remove existing container (if exists)
      shell: |
        docker stop {{ APP_NAME }} || true
        docker rm {{ APP_NAME }} || true
      ignore_errors: yes

    - name: Pull the latest Docker image
      shell: docker pull {{ DOCKERHUB_USERNAME }}/{{ APP_NAME }}:latest

    - name: Run the new container with .env file and persistent storage
      shell: |
        docker run -d --name {{ APP_NAME }} \
        --env-file /home/{{ USERNAME }}/dev/apps/{{ APP_NAME }}/.env \
        -v /home/{{ USERNAME }}/dev/apps/{{ APP_NAME }}/db:/db \
        {{ DOCKERHUB_USERNAME }}/{{ APP_NAME }}:latest
